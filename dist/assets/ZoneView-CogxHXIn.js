import{r as a,U as o,V as z,bb as $,an as E,a2 as R,bz as _,W as v,a6 as r,be as h,a5 as O}from"./index-CDYSMnhF.js";import{h as F}from"./moment-C5S46NFB.js";const{Title:L}=v,{TabPane:A}=$,{RangePicker:K}=O,g="/api/accounts",M=()=>{const[I,N]=a.useState([]),[m,p]=a.useState({}),[k,f]=a.useState(!0),[y,w]=a.useState([]),[D,x]=a.useState(!1),[i,b]=a.useState("all"),[S,P]=a.useState([]),c=JSON.parse(localStorage.getItem("user")),l=c==null?void 0:c.role,d=c==null?void 0:c._id,T=async()=>{f(!0);try{const e=await r.get("/api/zones");N(e.data);const s=await r.get(`${g}/paginated?pageSize=1000`);p(n=>({...n,all:s.data.total}));const t={};for(const n of e.data){const u=await r.get(`${g}/paginated?zone=${n._id}&pageSize=1000`);t[n._id]=u.data.total}p(n=>({...n,...t})),e.data.length>0&&b("all")}catch(e){console.error("Error fetching zones and counts:",e),h.error("Failed to load zones and counts.")}finally{f(!1)}},j=async(e,s=S)=>{x(!0);try{let t=`${g}/paginated?pageSize=1000`;if(e&&e!=="all"&&(t+=`&zone=${e}`),s&&s.length===2){const u=s[0].startOf("day").toISOString(),Z=s[1].endOf("day").toISOString();t+=`&startDate=${u}&endDate=${Z}`}l==="Employee"&&d&&(t+=`&userId=${d}&role=${l}`);const n=await r.get(t);w(n.data.data)}catch(t){h.error("Failed to fetch accounts."),console.error("Fetch accounts error:",t)}finally{x(!1)}};a.useEffect(()=>{T()},[]),a.useEffect(()=>{j(i)},[i,l,d,S]);const C=[{title:"Business Name",dataIndex:"businessName",key:"businessName"},{title:"Contact Name",dataIndex:"contactName",key:"contactName"},{title:"Email",dataIndex:"email",key:"email"},{title:"Mobile Number",dataIndex:"mobileNumber",key:"mobileNumber"},{title:"Status",dataIndex:"status",key:"status"},{title:"Source Type",dataIndex:"sourceType",key:"sourceType"},{title:"Created At",dataIndex:"createdAt",key:"createdAt",render:e=>F(e).format("YYYY-MM-DD HH:mm"),sorter:(e,s)=>new Date(e.createdAt)-new Date(s.createdAt)}];return o.jsxs(z,{title:o.jsx(L,{level:4,children:"Leads & Customers by Zone"}),children:[o.jsxs($,{defaultActiveKey:"all",onChange:e=>b(e),activeKey:i,loading:k,children:[o.jsx(A,{tab:`All Zones (${m.all||0})`},"all"),I.map(e=>o.jsx(A,{tab:`${e.name} (${m[e._id]||0})`},e._id))]}),o.jsx(E,{spinning:D,children:y.length>0?o.jsx(R,{columns:C,dataSource:y,rowKey:"_id",scroll:{x:"max-content"},pagination:!1}):o.jsx(_,{description:"No accounts found for this zone."})})]})};export{M as default};
