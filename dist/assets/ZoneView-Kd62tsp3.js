import{r as a,K as o,L as E,aU as $,af as z,W as R,bh as _,T as v,$ as r,aY as b,Z as L}from"./index-FVmEbnB1.js";import{h as O}from"./moment-C5S46NFB.js";const{Title:Y}=v,{TabPane:A}=$,{RangePicker:U}=L,f="/api/accounts",M=()=>{const[I,N]=a.useState([]),[g,m]=a.useState({}),[T,p]=a.useState(!0),[y,k]=a.useState([]),[w,x]=a.useState(!1),[i,h]=a.useState("all"),[S,F]=a.useState([]),c=JSON.parse(localStorage.getItem("user")),l=c==null?void 0:c.role,d=c==null?void 0:c._id,D=async()=>{p(!0);try{const t=await r.get("/api/zones");N(t.data);const s=await r.get(`${f}/paginated?pageSize=1000`);m(n=>({...n,all:s.data.total}));const e={};for(const n of t.data){const u=await r.get(`${f}/paginated?zone=${n._id}&pageSize=1000`);e[n._id]=u.data.total}m(n=>({...n,...e})),t.data.length>0&&h("all")}catch(t){console.error("Error fetching zones and counts:",t),b.error("Failed to load zones and counts.")}finally{p(!1)}},Z=async(t,s=S)=>{x(!0);try{let e=`${f}/paginated?pageSize=1000`;if(t&&t!=="all"&&(e+=`&zone=${t}`),s&&s.length===2){const u=s[0].startOf("day").toISOString(),C=s[1].endOf("day").toISOString();e+=`&startDate=${u}&endDate=${C}`}l==="Employee"&&d&&(e+=`&userId=${d}&role=${l}`);const n=await r.get(e);k(n.data.data)}catch(e){b.error("Failed to fetch accounts."),console.error("Fetch accounts error:",e)}finally{x(!1)}};a.useEffect(()=>{D()},[]),a.useEffect(()=>{Z(i)},[i,l,d,S]);const j=[{title:"Business Name",dataIndex:"businessName",key:"businessName"},{title:"Contact Name",dataIndex:"contactName",key:"contactName"},{title:"Email",dataIndex:"email",key:"email"},{title:"Mobile Number",dataIndex:"mobileNumber",key:"mobileNumber"},{title:"Status",dataIndex:"status",key:"status"},{title:"Source Type",dataIndex:"sourceType",key:"sourceType"},{title:"Created At",dataIndex:"createdAt",key:"createdAt",render:t=>O(t).format("YYYY-MM-DD HH:mm"),sorter:(t,s)=>new Date(t.createdAt)-new Date(s.createdAt)}];return o.jsxs(E,{title:o.jsx(Y,{level:4,children:"Leads & Customers by Zone"}),children:[o.jsxs($,{defaultActiveKey:"all",onChange:t=>h(t),activeKey:i,loading:T,children:[o.jsx(A,{tab:`All Zones (${g.all||0})`},"all"),I.map(t=>o.jsx(A,{tab:`${t.name} (${g[t._id]||0})`},t._id))]}),o.jsx(z,{spinning:w,children:y.length>0?o.jsx(R,{columns:j,dataSource:y,rowKey:"_id",scroll:{x:"max-content"},pagination:!1}):o.jsx(_,{description:"No accounts found for this zone."})})]})};export{M as default};
